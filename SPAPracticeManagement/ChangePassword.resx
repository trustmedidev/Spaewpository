<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+EAFkV4aWYAAE1NACoAAAAIAAAAAAAA
        /+wAEUR1Y2t5AAEABAAAAFoAAP/hAzpodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tl
        dCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjAtYzA2MCA2MS4x
        MzQ3NzcsIDIwMTAvMDIvMTItMTc6MzI6MDAgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJo
        dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4
        bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0
        dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9v
        bD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQz
        QTdDN0MxQjM3QzExRTVBMEYyRUQzMkQzRTBENzQ0IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjQz
        QTdDN0MyQjM3QzExRTVBMEYyRUQzMkQzRTBENzQ0Ij4NCgkJCTx4bXBNTTpEZXJpdmVkRnJvbSBzdFJl
        ZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjQzQTdDN0JGQjM3QzExRTVBMEYyRUQzMkQzRTBENzQ0IiBzdFJl
        Zjpkb2N1bWVudElEPSJ4bXAuZGlkOjQzQTdDN0MwQjM3QzExRTVBMEYyRUQzMkQzRTBENzQ0Ii8+DQoJ
        CTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZXRhPg0KPD94cGFja2V0IGVu
        ZD0ndyc/Pv/bAEMAAQEBAQEBAQEBAQIBAQECAgIBAQICAgICAgICAgMCAwMDAwIDAwQEBAQEAwUFBQUF
        BQcHBwcHCAgICAgICAgICP/bAEMBAQEBAgICBQMDBQcFBAUHCAgICAgICAgICAgICAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICP/AABEIAEcApgMBEQACEQEDEQH/xAAeAAEAAQQDAQEAAAAA
        AAAAAAAACAUGBwkCAwQBCv/EADIQAAEDBAIBAwMEAQIHAAAAAAECAwQABQYHEQgSIRMJMRQVQVEiMkKB
        CnGhsSOzFjb/xAAeAQEAAQQDAQEAAAAAAAAAAAAACAEDBgcCBAUJCv/EADsRAAEDAgQFAgQCCAYDAAAA
        AAEAAgMRBCESBQYxQSIHCFETYXEUCYEykbFCUrIjMxXwocHxwoPDNBf/2gAMAwEAAhEDEQA/AP38URKI
        lESiJREoiURKIlESiJREoiURKIlESiJREoiURKIlESiJREoiURKIlESiJREoiURKIlESiJREoiURKItQ
        t7+R/PrV20c67N65s7tjbzOLjJvqpM0TPtpFwbh+94g+Hn4OeQHHH+nrUoLTsNZSbZ/uZmfn9kyZaClQ
        0mnrSoooQ6h5UalDvX+yC3jMYuRDmq7NQuDa+laGvotvVRfU3koiURKIlESiJREoiURKIlESiJREoiUR
        KIlESiJRFpD7691OyGiN/wArBtX32LBxiPabZMagv2iHN8n3w4pzycdbK/FXiBwFDj9OKl52Y7S6DrOi
        C4u2kyF7hUOIwFKYA0Xz68kO/u6tublNpp72thEbHULGuxNa4kVx+asrbm/sF3e2xtTFOrdyn7ZsD2LM
        677CWFtD8NrM3I8KeiDcW3UtctxpThYJfDqSE8cpJFettjZV5pBNnNfNFs8SGSB+B9qrm5mEVxc0ZunK
        ca0K8De3crTtwAajb6Y917GYRFdRirROQxwZIDTBjzk684NKVFQrh6Td2Oze4eymM6z2bkUWfjMtm8/l
        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
        lESiJRF//9k=
</value>
  </data>
</root>